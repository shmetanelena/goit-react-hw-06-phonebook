{"ast":null,"code":"var _jsxFileName = \"/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport styles from './App.module.css';\nimport { useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, delContact, setFilter } from '../redux/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const newContact = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    } // const contact = { id: nanoid(), name, number };\n    // setContacts(prevContacts => [...prevContacts, contact]);\n\n\n    dispatch(addContact({\n      name,\n      number\n    }));\n    return true;\n  };\n\n  const deleteContact = contactId => {\n    // setContacts(prevContacts =>\n    //   prevContacts.filter(contact => contact.id !== contactId)\n    // );\n    dispatch(delContact(contactId));\n  };\n\n  const visibleContacts = useMemo(() => {\n    if (filter.length === 0) {\n      return contacts;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  }, [filter, contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: newContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find contacts by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          onChange: e => dispatch(setFilter(e.currentTarget.value)),\n          value: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: visibleContacts,\n          onDeleteContact: deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vPrEB/RWO5cGXkTUBnDdDeQTt0M=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["ContactForm","ContactList","Filter","nanoid","styles","useState","useMemo","useSelector","useDispatch","addContact","delContact","setFilter","App","dispatch","contacts","state","items","filter","newContact","name","number","normalizedName","toLowerCase","find","contact","alert","deleteContact","contactId","visibleContacts","length","normalizedFilter","includes","section","box","e","currentTarget","value"],"mappings":"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","sourcesContent":["import { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport styles from './App.module.css';\nimport { useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, delContact, setFilter } from '../redux/contactsSlice';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const newContact = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n    // const contact = { id: nanoid(), name, number };\n    // setContacts(prevContacts => [...prevContacts, contact]);\n    dispatch(addContact({ name, number }));\n    return true;\n  };\n\n  const deleteContact = contactId => {\n    // setContacts(prevContacts =>\n    //   prevContacts.filter(contact => contact.id !== contactId)\n    // );\n    dispatch(delContact(contactId));\n  };\n\n  const visibleContacts = useMemo(() => {\n    if (filter.length === 0) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, contacts]);\n\n  return (\n    <div className={styles.section}>\n      <div className={styles.box}>\n        <div className={styles.box}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={newContact} />\n        </div>\n\n        <div className={styles.box}>\n          <h3>Find contacts by name:</h3>\n          <Filter\n            onChange={e => dispatch(setFilter(e.currentTarget.value))}\n            value={filter}\n          />\n        </div>\n\n        <div className={styles.box}>\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={deleteContact}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}