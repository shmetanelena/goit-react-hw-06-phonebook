{"ast":null,"code":"var _jsxFileName = \"/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport styles from './App.module.css';\nimport { useState, useMemo } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    setContacts(prevContacts => [...prevContacts, contact]);\n    return true;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  };\n\n  const visibleContacts = useMemo(() => {\n    if (filter.length === 0) {\n      return contacts;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  }, [filter, contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find contacts by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          onChange: e => setFilter(e.currentTarget.value),\n          value: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: visibleContacts,\n          onDeleteContact: deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HuAb4jrh2vswlqSAkLZLpg2KO78=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["ContactForm","ContactList","Filter","nanoid","styles","useState","useMemo","useLocalStorage","App","contacts","setContacts","filter","setFilter","addContact","name","number","normalizedName","toLowerCase","find","contact","alert","id","prevContacts","deleteContact","contactId","visibleContacts","length","normalizedFilter","includes","section","box","e","currentTarget","value"],"mappings":"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","sourcesContent":["import { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport { nanoid } from 'nanoid';\nimport styles from './App.module.css';\nimport { useState, useMemo } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nexport const App = () => {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n    const contact = { id: nanoid(), name, number };\n    setContacts(prevContacts => [...prevContacts, contact]);\n    return true;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId)\n    );\n  };\n\n  const visibleContacts = useMemo(() => {\n    if (filter.length === 0) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, contacts]);\n\n  return (\n    <div className={styles.section}>\n      <div className={styles.box}>\n        <div className={styles.box}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={addContact} />\n        </div>\n\n        <div className={styles.box}>\n          <h3>Find contacts by name:</h3>\n          <Filter\n            onChange={e => setFilter(e.currentTarget.value)}\n            value={filter}\n          />\n        </div>\n\n        <div className={styles.box}>\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={deleteContact}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}