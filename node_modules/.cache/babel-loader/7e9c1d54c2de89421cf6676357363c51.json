{"ast":null,"code":"var _jsxFileName = \"/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport styles from './App.module.css';\nimport { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, delContact, setFilter } from '../redux/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const newContact = _ref => {\n    let {\n      name,\n      number\n    } = _ref;\n    const normalizedName = name.toLowerCase();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n\n    dispatch(addContact({\n      name,\n      number\n    }));\n    return true;\n  }; // const visibleContacts = useMemo(() => {\n  //   if (filter.length === 0) {\n  //     return contacts;\n  //   }\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(({ name }) =>\n  //     name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // }, [filter, contacts]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: newContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find contacts by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          onChange: e => dispatch(setFilter(e.currentTarget.value)),\n          value: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: /*#__PURE__*/_jsxDEV(ContactList // contacts={visibleContacts}\n        // onDeleteContact={contactId => dispatch(delContact(contactId))}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kZifKKZUFZmt5uf6+NUqJFRNnxE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["ContactForm","ContactList","Filter","styles","useMemo","useSelector","useDispatch","addContact","delContact","setFilter","App","dispatch","contacts","state","items","filter","newContact","name","number","normalizedName","toLowerCase","find","contact","alert","section","box","e","currentTarget","value"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,wBAAlD;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B;AACA,QAAMC,MAAM,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeG,MAAzB,CAA1B;;AAEA,QAAMC,UAAU,GAAG,QAAsB;AAAA,QAArB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAqB;AACvC,UAAMC,cAAc,GAAGF,IAAI,CAACG,WAAL,EAAvB;;AACA,QACER,QAAQ,CAACS,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACL,IAAR,CAAaG,WAAb,OAA+BD,cAAxD,CADF,EAEE;AACAI,MAAAA,KAAK,CAAE,GAAEN,IAAK,0BAAT,CAAL;AACA,aAAO,KAAP;AACD;;AACDN,IAAAA,QAAQ,CAACJ,UAAU,CAAC;AAAEU,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAX,CAAR;AACA,WAAO,IAAP;AACD,GAVD,CALuB,CAiBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACqB,OAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACsB,GAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAACsB,GAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACsB,GAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,QAAQ,EAAEC,CAAC,IAAIf,QAAQ,CAACF,SAAS,CAACiB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV,CADzB;AAEE,UAAA,KAAK,EAAEb;AAFT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAcE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACsB,GAAvB;AAAA,+BACE,QAAC,WAAD,CACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApDM;;GAAMf,G;UACMJ,W,EACAD,W,EACFA,W;;;KAHJK,G","sourcesContent":["import { ContactForm } from './ContactForm';\nimport { ContactList } from './ContactList';\nimport { Filter } from './Filter';\nimport styles from './App.module.css';\nimport { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, delContact, setFilter } from '../redux/contactsSlice';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const newContact = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return false;\n    }\n    dispatch(addContact({ name, number }));\n    return true;\n  };\n\n  // const visibleContacts = useMemo(() => {\n  //   if (filter.length === 0) {\n  //     return contacts;\n  //   }\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(({ name }) =>\n  //     name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // }, [filter, contacts]);\n\n  return (\n    <div className={styles.section}>\n      <div className={styles.box}>\n        <div className={styles.box}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={newContact} />\n        </div>\n\n        <div className={styles.box}>\n          <h3>Find contacts by name:</h3>\n          <Filter\n            onChange={e => dispatch(setFilter(e.currentTarget.value))}\n            value={filter}\n          />\n        </div>\n\n        <div className={styles.box}>\n          <ContactList\n          // contacts={visibleContacts}\n          // onDeleteContact={contactId => dispatch(delContact(contactId))}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}