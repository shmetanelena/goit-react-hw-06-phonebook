{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { contactsSlice } from './contactsSlice';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, contactsSlice.reducer);\nexport const store = configureStore({\n  reducer: {\n    // contacts: contactsSlice.reducer,\n    contacts: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger)\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","contactsSlice","logger","persistStore","persistReducer","storage","persistConfig","key","persistedReducer","reducer","store","contacts","middleware","getDefaultMiddleware","concat","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA;AAFoB,CAAtB;AAKA,MAAMG,gBAAgB,GAAGJ,cAAc,CAACE,aAAD,EAAgBL,aAAa,CAACQ,OAA9B,CAAvC;AAEA,OAAO,MAAMC,KAAK,GAAGV,cAAc,CAAC;AAClCS,EAAAA,OAAO,EAAE;AACP;AACAE,IAAAA,QAAQ,EAAEH;AAFH,GADyB;AAKlCI,EAAAA,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,GAAGC,MAAvB,CAA8BZ,MAA9B;AALF,CAAD,CAA5B;AAQP,OAAO,MAAMa,SAAS,GAAGZ,YAAY,CAACO,KAAD,CAA9B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { contactsSlice } from './contactsSlice';\nimport logger from 'redux-logger';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, contactsSlice.reducer);\n\nexport const store = configureStore({\n  reducer: {\n    // contacts: contactsSlice.reducer,\n    contacts: persistedReducer,\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}