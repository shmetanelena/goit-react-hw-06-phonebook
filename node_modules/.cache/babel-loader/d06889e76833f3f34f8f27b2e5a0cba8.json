{"ast":null,"code":"import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nexport const addContact = createAction('contacts/add', _ref => {\n  let {\n    name,\n    number\n  } = _ref;\n  return {\n    payload: {\n      id: nanoid(),\n      name,\n      number\n    }\n  };\n});\nexport const delContact = createAction('contacts/del');\nexport const contactsReducer = createReducer([], {\n  addContact: (state, action) => {\n    state.push(action.payload);\n  },\n  delContact: (state, action) => {\n    return state.filter(item => item.id === action.payload);\n  }\n});\nexport const store = configureStore({\n  reducer: contactsReducer\n});","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","createAction","createReducer","nanoid","addContact","name","number","payload","id","delContact","contactsReducer","state","action","push","filter","item","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,kBAA5D;AAEA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAO,MAAMC,UAAU,GAAGH,YAAY,CAAC,cAAD,EAAiB,QAAsB;AAAA,MAArB;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAqB;AAC3E,SAAO;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAEL,MAAM,EAAZ;AAAgBE,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB;AAAX,GAAP;AACD,CAFqC,CAA/B;AAGP,OAAO,MAAMG,UAAU,GAAGR,YAAY,CAAC,cAAD,CAA/B;AAEP,OAAO,MAAMS,eAAe,GAAGR,aAAa,CAAC,EAAD,EAAK;AAC/CE,EAAAA,UAAU,EAAE,CAACO,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,IAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACL,OAAlB;AACD,GAH8C;AAI/CE,EAAAA,UAAU,EAAE,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC7B,WAAOD,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYI,MAAM,CAACL,OAAxC,CAAP;AACD;AAN8C,CAAL,CAArC;AASP,OAAO,MAAMS,KAAK,GAAGhB,cAAc,CAAC;AAClCiB,EAAAA,OAAO,EAAEP;AADyB,CAAD,CAA5B","sourcesContent":["import { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { nanoid } from 'nanoid';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => {\n  return { payload: { id: nanoid(), name, number } };\n});\nexport const delContact = createAction('contacts/del');\n\nexport const contactsReducer = createReducer([], {\n  addContact: (state, action) => {\n    state.push(action.payload);\n  },\n  delContact: (state, action) => {\n    return state.filter(item => item.id === action.payload);\n  },\n});\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n});\n"]},"metadata":{},"sourceType":"module"}