{"ast":null,"code":"var _JSON$parse;\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nconst NAME = 'contacts';\n\nconst saveContacts = items => {\n  window.localStorage.setItem(NAME, JSON.stringify(items));\n};\n\nexport const contactsSlice = createSlice({\n  name: NAME,\n  initialState: {\n    items: (_JSON$parse = JSON.parse(window.localStorage.getItem(NAME))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [],\n    filter: ''\n  },\n  reducers: {\n    addContact: {\n      reducer: (state, action) => {\n        state.items.push(action.payload);\n        saveContacts(state.items);\n      },\n      prepare: _ref => {\n        let {\n          name,\n          number\n        } = _ref;\n        return {\n          payload: {\n            id: nanoid(),\n            name,\n            number\n          }\n        };\n      }\n    },\n\n    delContact(state, action) {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      saveContacts(state.items);\n    },\n\n    setFilter(state, action) {\n      state.filter = action.payload;\n    }\n\n  }\n});\nexport const {\n  addContact,\n  delContact,\n  setFilter\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/elenaelenova/Projects/goit-react-hw-06-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","nanoid","NAME","saveContacts","items","window","localStorage","setItem","JSON","stringify","contactsSlice","name","initialState","parse","getItem","filter","reducers","addContact","reducer","state","action","push","payload","prepare","number","id","delContact","item","setFilter","actions"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,IAAI,GAAG,UAAb;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,IAA5B,EAAkCM,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAlC;AACD,CAFD;;AAIA,OAAO,MAAMM,aAAa,GAAGV,WAAW,CAAC;AACvCW,EAAAA,IAAI,EAAET,IADiC;AAEvCU,EAAAA,YAAY,EAAE;AACZR,IAAAA,KAAK,iBAAEI,IAAI,CAACK,KAAL,CAAWR,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4BZ,IAA5B,CAAX,CAAF,qDAAmD,EAD5C;AAEZa,IAAAA,MAAM,EAAE;AAFI,GAFyB;AAMvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,QAAAA,KAAK,CAACf,KAAN,CAAYiB,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACAnB,QAAAA,YAAY,CAACgB,KAAK,CAACf,KAAP,CAAZ;AACD,OAJS;AAKVmB,MAAAA,OAAO,EAAE,QAAsB;AAAA,YAArB;AAAEZ,UAAAA,IAAF;AAAQa,UAAAA;AAAR,SAAqB;AAC7B,eAAO;AAAEF,UAAAA,OAAO,EAAE;AAAEG,YAAAA,EAAE,EAAExB,MAAM,EAAZ;AAAgBU,YAAAA,IAAhB;AAAsBa,YAAAA;AAAtB;AAAX,SAAP;AACD;AAPS,KADJ;;AAURE,IAAAA,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACf,KAAN,GAAce,KAAK,CAACf,KAAN,CAAYW,MAAZ,CAAmBY,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYL,MAAM,CAACE,OAA9C,CAAd;AACAnB,MAAAA,YAAY,CAACgB,KAAK,CAACf,KAAP,CAAZ;AACD,KAbO;;AAcRwB,IAAAA,SAAS,CAACT,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACE,OAAtB;AACD;;AAhBO;AAN6B,CAAD,CAAjC;AA0BP,OAAO,MAAM;AAAEL,EAAAA,UAAF;AAAcS,EAAAA,UAAd;AAA0BE,EAAAA;AAA1B,IAAwClB,aAAa,CAACmB,OAA5D","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n\nconst NAME = 'contacts';\n\nconst saveContacts = items => {\n  window.localStorage.setItem(NAME, JSON.stringify(items));\n};\n\nexport const contactsSlice = createSlice({\n  name: NAME,\n  initialState: {\n    items: JSON.parse(window.localStorage.getItem(NAME)) ?? [],\n    filter: '',\n  },\n  reducers: {\n    addContact: {\n      reducer: (state, action) => {\n        state.items.push(action.payload);\n        saveContacts(state.items);\n      },\n      prepare: ({ name, number }) => {\n        return { payload: { id: nanoid(), name, number } };\n      },\n    },\n    delContact(state, action) {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      saveContacts(state.items);\n    },\n    setFilter(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { addContact, delContact, setFilter } = contactsSlice.actions;\n"]},"metadata":{},"sourceType":"module"}